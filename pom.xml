<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>net.hunnor.dict</groupId>
	<artifactId>export-lucene</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<name>Export (Lucene)</name>
	<description>Create a Lucene index from the XML exports</description>

	<distributionManagement>
		<!--
			Configure credentials in Maven settings.
			<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
				<servers>
					<server>
						<id>dict-linode</id>
						<username>hunnor</username>
						<privateKey>/home/user/.ssh/id_rsa</privateKey>
					</server>
				</servers>
			</settings>

			"Invalid privatekey" error:
			Recent versions of OpenSSH (7.8 and newer) generate keys in new OpenSSH format by default, which starts with:
			BEGIN OPENSSH PRIVATE KEY
			JSch does not support this key format.
			Use ssh-keygen to convert the key to the classic OpenSSH format:
			ssh-keygen -p -m pem -f id_rsa
		-->
		<repository>
			<id>dict-linode</id>
			<url>scp://dict-linode.hunnor.net:/var/www/html/maven</url>
		</repository>
	</distributionManagement>

	<properties>
		<checkstyle.version>3.1.1</checkstyle.version>
		<jacoco.version>0.8.7</jacoco.version>
		<junit5.version>5.7.2</junit5.version>
		<lucene.version>3.6.2</lucene.version>
		<maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.deploy.plugin.version>3.0.0-M1</maven.deploy.plugin.version>
		<maven.enforcer.plugin.version>3.0.0-M2</maven.enforcer.plugin.version>
		<maven.install.plugin.version>3.0.0-M1</maven.install.plugin.version>
		<maven.site.plugin.version>3.9.1</maven.site.plugin.version>
		<maven.surefire.plugin.version>3.0.0-M3</maven.surefire.plugin.version>
		<maven.versions.plugin.version>2.8.1</maven.versions.plugin.version>
		<maven.wagon.ssh.plugin.version>3.4.1</maven.wagon.ssh.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j.version>1.7.32</slf4j.version>
		<spotbugs.version>4.1.4</spotbugs.version>
	</properties>

	<modules>
		<module>export-lucene-common</module>
		<module>export-lucene-indexer</module>
		<module>export-lucene-searcher</module>
	</modules>

	<dependencies>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.agent</artifactId>
			<version>${jacoco.version}</version>
			<classifier>runtime</classifier>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven.clean.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.wagon</groupId>
							<artifactId>wagon-ssh</artifactId>
							<version>${maven.wagon.ssh.plugin.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven.enforcer.plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.3.9</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>google_checks.xml</configLocation>
							<violationSeverity>warning</violationSeverity>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.version}</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Low</threshold>
				</configuration>
				<executions>
					<execution>
						<id>spotbugs-report</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>default-instrument</id>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
					<execution>
						<id>default-restore-instrumented-classes</id>
						<goals>
							<goal>restore-instrumented-classes</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${maven.versions.plugin.version}</version>
				<configuration>
					<rulesUri>file://${maven.multiModuleProjectDirectory}/versions.xml</rulesUri>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
